#!/usr/bin/env bash

# This is an RVM Project .rvmrc file, used to automatically load the ruby
# development environment upon cd'ing into the directory

# First we specify our desired <ruby>[@<gemset>], the @gemset name is optional,
# Only full ruby name is supported here, for short names use:
#     echo "rvm use 3.4.1@cally" > .rvmrc
environment_id="ruby-3.4.1@cally"

# Uncomment the following lines if you want to verify rvm version per project
# rvmrc_id="3.4.1@cally"
# if [[ -d "${rvm_path:-$HOME/.rvm}/environments"
#   && -s "${rvm_path:-$HOME/.rvm}/environments/$rvmrc_id" ]]
# then
#   \. "${rvm_path:-$HOME/.rvm}/environments/$rvmrc_id"
# else
#   # If the environment file has not yet been created, use the RVM CLI to select.
#   rvm --create use "$environment_id" || {
#     echo "Failed to create RVM environment '${environment_id}'."
#     return 1
#   }
# fi

# If you use bundler, this might be useful to you:
# if [[ -s Gemfile ]] && {
#   ! builtin command -v bundle >/dev/null ||
#   builtin command -v bundle | GREP_OPTIONS="" \grep $rvm_path/bin/bundle >/dev/null
# }
# then
#   printf "%b" "The rubygem 'bundler' is not installed. Installing it now.\n"
#   gem install bundler
# fi
# if [[ -s Gemfile ]] && builtin command -v bundle >/dev/null
# then
#   bundle install | GREP_OPTIONS="" \grep -vE '^Using|^Fetching' | GREP_OPTIONS="" \grep -v checkers || true
# fi

rvm --create use "$environment_id" || {
  echo "Failed to create RVM environment '${environment_id}'."
  exit 1
}
