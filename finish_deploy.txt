🚀 FINISH CALLY DEPLOYMENT

SSH into your server: ssh root@157.230.142.228
Password: 0f65fbf94679333dff40877bef

Then copy-paste this ENTIRE block:

# Generate secret key for production
SECRET_KEY_BASE=$(su - cally -c "cd cally && source ~/.rvm/scripts/rvm && rvm use ruby-3.4.1@cally && RAILS_ENV=production rails secret")

# Configure Nginx
cat > /etc/nginx/sites-available/cally << 'NGINX_EOF'
server {
    listen 80;
    server_name _;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}
NGINX_EOF

ln -sf /etc/nginx/sites-available/cally /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl restart nginx

# Setup Ollama service
cat > /etc/systemd/system/ollama.service << 'OLLAMA_EOF'
[Unit]
Description=Ollama Server
After=network.target

[Service]
Type=simple
User=cally
WorkingDirectory=/home/cally
ExecStart=/usr/local/bin/ollama serve
Restart=always
RestartSec=3
Environment=HOME=/home/cally

[Install]
WantedBy=multi-user.target
OLLAMA_EOF

# Setup Cally service  
cat > /etc/systemd/system/cally.service << 'CALLY_EOF'
[Unit]
Description=Cally Rails Application
After=network.target ollama.service
Requires=ollama.service

[Service]
Type=simple
User=cally
WorkingDirectory=/home/cally/cally
ExecStart=/home/cally/.rvm/wrappers/ruby-3.4.1@cally/rails server -b 0.0.0.0 -p 3000 -e production
Restart=always
RestartSec=10
Environment=RAILS_ENV=production
Environment=SECRET_KEY_BASE=$SECRET_KEY_BASE

[Install]
WantedBy=multi-user.target
CALLY_EOF

# Kill any existing processes
pkill -f "ollama serve" || true
pkill -f "rails server" || true

# Start services
systemctl daemon-reload
systemctl enable ollama cally nginx
systemctl start ollama
sleep 15
systemctl start cally

# Configure firewall
ufw allow OpenSSH
ufw allow 'Nginx Full' 
ufw --force enable

# Wait and check final status
sleep 10
echo ""
echo "🎉 DEPLOYMENT COMPLETE!"
echo "======================"
echo "🌐 Cally is running at: http://$(curl -s ifconfig.me)"
echo ""
echo "📊 Service Status:"
systemctl status ollama --no-pager -l
systemctl status cally --no-pager -l
systemctl status nginx --no-pager -l
echo ""
echo "🧪 Testing connection:"
curl -s http://localhost:3000/health || echo "❌ Health check failed"
echo ""
echo "✅ Visit: http://157.230.142.228"
